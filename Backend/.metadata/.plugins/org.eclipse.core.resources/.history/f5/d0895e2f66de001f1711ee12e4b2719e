package com.pgmates.entity;
import java.util.List;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.OneToMany;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

	@Entity
	@Getter
	@Setter
	@NoArgsConstructor
	@Entity
	@Table(name = "users") // Using "users" to avoid conflicts with reserved SQL keywords
	public class User {

	    @Id
	    @GeneratedValue(strategy = GenerationType.IDENTITY)
	    private Long userID;

	    @NotNull
	    @Size(max = 50)
	    private String firstName;

	    @NotNull
	    @Size(max = 50)
	    @Pattern(regexp = "^[a-zA-Z\\s]*$", message = "Only alphabetic characters and spaces are allowed.")
	    private String lastName;

	    @NotNull
	    @Email
	    @Column(unique = true)
	    private String email;

	    @NotNull
	    @Size(min = 8, message = "Password must be at least 8 characters long.")
	    private String password; // Ensure hashing before saving

	    @NotNull
	    @Enumerated(EnumType.STRING)
	    private Gender gender;

	    @Pattern(regexp = "^\\d{10}$", message = "Contact must be a 10-digit number.")
	    private String contact;

	    @NotNull
	    @Enumerated(EnumType.STRING)
	    private Role role;

	    @OneToMany(mappedBy = "user", cascade = CascadeType.ALL, fetch = FetchType.LAZY)
	    private List<Property> properties;

	    @OneToMany(mappedBy = "user", cascade = CascadeType.ALL, fetch = FetchType.LAZY)
	    private List<Appointment> appointments;

	    // Constructors, Getters, and Setters
	}


